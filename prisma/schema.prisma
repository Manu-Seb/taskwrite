generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String             @id @default(cuid())
  clerkId         String             @unique
  email           String             @unique
  name            String?
  preferences     Json               @default("{}")
  createdAt       DateTime           @default(now())

  views           UserArticleView[]
}

model Source {
  id              String             @id @default(cuid())
  name            String
  type            SourceType
  sourceUrl       String
  config          Json               @default("{}")
  lastFetchedAt   DateTime?
  lastAccessedAt  DateTime?
  accessCount     Int                @default(0)
  isActive        Boolean            @default(true)
  createdAt       DateTime           @default(now())

  articles        Article[]
  scrapeLogs      ScrapeLog[]
}

model Article {
  id              String             @id @default(cuid())
  sourceId        String
  title           String
  url             String             @unique
  author          String?
  publishedAt     DateTime?
  content         String?
  summary         String?
  tags            String[]
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @default(now())

  source          Source             @relation(fields: [sourceId], references: [id])
  views           UserArticleView[]

  @@index([sourceId, publishedAt])
}

model ScrapeLog {
  id              Int                @id @default(autoincrement())
  sourceId        String
  status          ScrapeStatus
  message         String?
  startedAt       DateTime           @default(now())
  finishedAt      DateTime?

  source          Source             @relation(fields: [sourceId], references: [id])
}

model UserArticleView {
  userId          String
  articleId       String
  viewedAt        DateTime           @default(now())
  liked           Boolean?
  saved           Boolean?

  user            User               @relation(fields: [userId], references: [id])
  article         Article            @relation(fields: [articleId], references: [id])

  @@id([userId, articleId])
}

enum SourceType {
  rss
  api
  scraper
}

enum ScrapeStatus {
  success
  failed
  timeout
  empty
}
